# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'




    sensio_framework_extra.view.listener:
        alias: Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    App\Utils\:
        resource: '../src/Utils'
        tags: ['utils.service_arguments']


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Repository\Interfaces\:
        resource: '../src/Repository/Interfaces'
        #tags: ['repoInterface.service_arguments']


   # the ``App\Repository\UserRepository`` service will be injected when
    # an ``App\Repository\UserRepoInterface`` type-hint is detected
    App\Repository\UserRepository:
      public: true
      autowire: true
      class: App\Repository\UserRepository
      factory: ["@doctrine.orm.default_entity_manager", getRepository]
      arguments: [App\Entity\User]


    App\Repository\Interfaces\UserRepoInterface: '@App\Repository\UserRepository'






    # the ``App\Repository\AuthorizationRepository`` service will be injected when
    # an ``App\Repository\AuthorizationRepoInterface`` type-hint is detected
    App\Repository\AuthorizationRepository:
      public: true
      autowire: true
      class: App\Repository\AuthorizationRepository
      factory: ["@doctrine.orm.default_entity_manager", getRepository]


    App\Repository\Interfaces\AuthorizationRepoInterface: '@App\Repository\AuthorizationRepository'



     # the ``App\Repository\GroupRepository`` service will be injected when
    # an ``App\Repository\GroupRepoInterface`` type-hint is detected
    App\Repository\GroupRepository:
      public: true
      autowire: true
      class: App\Repository\GroupRepository
      factory: ["@doctrine.orm.default_entity_manager", getRepository]
      arguments: [App\Entity\Group]

    App\Repository\Interfaces\GroupRepoInterface: '@App\Repository\GroupRepository'



    # the ``App\Repository\UsersGroupRepository`` service will be injected when
    # an ``App\Repository\UsersGroupRepoInterface`` type-hint is detected
    App\Repository\UsersGroupRepository:
      public: true
      autowire: true
      class: App\Repository\UsersGroupRepository
      factory: ["@doctrine.orm.default_entity_manager", getRepository]
      arguments: [App\Entity\UsersGroup]

    App\Repository\Interfaces\UsersGroupRepoInterface: '@App\Repository\UsersGroupRepository'


